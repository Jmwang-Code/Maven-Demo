<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.github.jmwang-code</groupId>
        <artifactId>trie</artifactId>
        <version>1.0.0</version>
    </parent>

    <groupId>io.github.jmwang-code</groupId>
    <artifactId>trie-service</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>

        <dependency>
            <groupId>io.github.jmwang-code</groupId>
            <artifactId>data-provider-base</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.jmwang-code</groupId>
            <artifactId>data-provider-jdbc</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.jmwang-code</groupId>
            <artifactId>trie-algorithm</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.jmwang-code</groupId>
            <artifactId>trie-persistence</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.jmwang-code</groupId>
            <artifactId>trie-utils</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.github.jmwang-code</groupId>
            <artifactId>ProviderAPI</artifactId>
            <version>1.0.0</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-dependencies</artifactId>-->
<!--            <version>${spring-cloud.version}</version>-->
<!--            <type>pom</type>-->
<!--            <scope>import</scope>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; Spring Cloud Alibaba &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.alibaba.cloud</groupId>-->
<!--            <artifactId>spring-cloud-alibaba-dependencies</artifactId>-->
<!--            <version>2021.1</version>-->
<!--            <type>pom</type>-->
<!--            <scope>import</scope>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.141.59</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- 配置 maven-assembly-plugin 插件

            您的项目可以使用预制装配描述符之一轻松构建分发“装配”。
            这些描述符处理许多常见操作，例如将项目的工件与生成的文档一起打包到一个 zip 存档中。
            或者，您的项目可以提供自己的描述符，并假设对如何将依赖项、模块、文件集和单个文件打包到程序集中进行更高级别的控制。

            https://maven.apache.org/plugins/maven-assembly-plugin/


            https://maven.apache.org/plugins/maven-assembly-plugin/assembly.html
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.4.2</version>
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        &lt;!&ndash; 打包为 zip &ndash;&gt;-->
<!--                        <manifest>-->
<!--                            <mainClass>com.cn.jmw.Main</mainClass>-->
<!--                        </manifest>-->
<!--                        <manifestEntries>-->
<!--                            <Class-Path>lib/</Class-Path>-->
<!--                        </manifestEntries>-->
<!--                        <addMavenDescriptor>false</addMavenDescriptor>-->
<!--                        <compress>true</compress>-->
<!--                        <forced>true</forced>-->
<!--                        <index>true</index>-->
<!--                        <manifestEntries>-->
<!--                            <Build-Date>${maven.build.timestamp}</Build-Date>-->
<!--                        </manifestEntries>-->
<!--                        <manifestEntries>-->
<!--                            <Build-Number>s</Build-Number>-->
<!--                        </manifestEntries>-->
<!--                        <manifestEntries>-->
<!--                            <Build-Tag>x</Build-Tag>-->
<!--                        </manifestEntries>-->
<!--                    </archive>-->
<!--                    <finalName>${project.artifactId}-${project.version}</finalName>-->
<!--                    &lt;!&ndash; 指定打包输出文件 &ndash;&gt;-->
<!--                    <outputDirectory>${project.build.directory}/../</outputDirectory>-->
<!--                </configuration>-->
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <!-- 描述符 指定文件assembly.xml （即最外层） -->
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                            <!-- 输出目录 -->
                            <outputDirectory>${project.parent.basedir}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>